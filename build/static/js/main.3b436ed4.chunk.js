(this["webpackJsonpcollege-login-system"]=this["webpackJsonpcollege-login-system"]||[]).push([[0],{140:function(e,t){e.exports={courseSearch:"SELECT finalList.crn AS 'CRN', finalList.courseID AS 'Course ID', finalList.courseName AS 'Course Name', finalList.roomID AS 'Room', \nfinalList.Instructor, finalList.Days, finalList.Time, finalList.semYear AS 'Semester' FROM\n(SELECT courseList.*, times1.TSID, CONCAT (substring(times1.day,1,1),'/',substring(times2.day,1,1)) AS 'Days', times1.Time FROM\n(SELECT S2022.crn, S2022.courseID, S2022.courseName, S2022.roomID,\nCONCAT (u.firstName, ', ', u.lastName) as 'Instructor', S2022.semYear, S2022.timeSlot1, S2022.timeSlot2 FROM user u\nRIGHT JOIN (SELECT s.crn, s.courseID, catalog.courseName, catalog.deptName, s.roomID, s.facultyID, s.semYear, s.timeSlot1, s.timeSlot2 from section s\nRIGHT JOIN (SELECT d.deptID, d.deptName, c.courseID, c.courseName FROM dept d\nJOIN course c ON d.deptID=c.deptID) AS catalog ON s.courseID=catalog.courseID\nWHERE s.semYear='S2022') AS S2022 ON u.userID=S2022.facultyID) AS courseList\nLEFT JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as times1\nON courseList.timeSlot1=times1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as times2\nON courseList.timeslot2=times2.TSID) AS finalList WHERE finalList.courseID LIKE '%?%';",degreeAuditPt1:"SELECT COUNT(*) AS 'Courses Completed', total.total AS 'Courses Needed', \nCONCAT(FORMAT((COUNT(*)/total.total)*100,2),'%') AS 'Percent Complete' FROM studentHistory sh\nJOIN (SELECT sm.studentID, sm.majorID, COUNT(*) AS 'total' FROM studentMajor sm\nJOIN majorCourse mc ON sm.majorID=mc.majorID\nWHERE sm.studentID=?) AS total ON sh.studentID=total.studentID;",degreeAuditPt2:"SELECT c1.courseID AS 'Course', c1.courseName AS 'Title', sh2.grade AS 'Grade', \nc1.numCredits AS 'Credits', sh2.semYear AS 'Term' FROM course c1\nJOIN (SELECT sh1.studentID, sh1.crn, sh1.semYear, sec1.courseID, sh1.grade FROM studentHistory sh1\nJOIN section sec1 ON sh1.crn=sec1.crn) AS sh2 ON c1.courseID=sh2.courseID\nWHERE sh2.studentID=? ORDER BY SUBSTRING(sh2.semYear,2,4) ASC;",assignedCourseList:"SELECT list.crn AS 'CRN', list.courseID AS 'Course ID', c.courseName AS 'Course Name', list.roomID As 'Room', \nlist.faculty AS 'Instructor', list.semYear as 'Semester', list.Days, list.Time, list.facultyID FROM course c\nJOIN (SELECT s.crn, s.courseID, s.roomID, s.semYear, s.facultyID, CONCAT(u.lastName, ', ', u.firstName) AS 'faculty', \nCONCAT(SUBSTRING(tSlots1.day,1,1),'/',SUBSTRING(tSlots2.day,1,1)) as Days, tSlots2.Time FROM section s\nJOIN user u ON s.facultyID=u.userID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1\nON s.timeslot1=tSlots1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS list ON list.courseID=c.courseID WHERE (list.semYear='F2021' OR list.semYear='S2022') \nAND facultyID='?' ORDER BY semYear;",facultyLoginInfo:"SELECT u.userID, u.userType, u.firstName, u.lastName, l.userEmail, l.password FROM\nuser u RIGHT JOIN loginInfo l ON u.userID=l.userID WHERE u.userID='?';",recordAttendance:"INSERT INTO attendance(studentID, crn, isPresent, date) VALUES ('?', '?', '?', '?');",studentHistory:"SELECT instructor.studentID AS 'Student ID', instructor.crn AS 'CRN', instructor.courseID AS 'Course ID', \ninstructor.courseName AS 'Course Name', instructor.semYear AS 'Semester', \nCONCAT(u.lastName,', ',u.firstName) AS 'Professor', instructor.grade AS 'Instructor' FROM user u JOIN\n(SELECT f.facultyID, courseHistory.studentID, courseHistory.courseID, courseHistory.courseName, courseHistory.crn, courseHistory.semYear, courseHistory.grade FROM faculty f\nJOIN (SELECT history.studentID, course.courseID, course.courseName, history.crn, history.semYear, history.grade, history.facultyID FROM course\nJOIN (SELECT sh.studentID, sh.crn, s.courseID, sh.semYear, sh.grade, s.facultyID FROM studentHistory sh JOIN \nsection s ON sh.crn=s.crn) AS history ON history.courseID=course.courseID) AS courseHistory\nON courseHistory.facultyID=f.facultyID) AS instructor ON u.userID=instructor.facultyID\nWHERE studentID=? ORDER BY studentID ASC;",transcript:"SELECT SUBSTRING(c1.courseID,1,2) AS 'Subject', SUBSTRING(c1.courseID,3,3) AS 'Course', c1.courseName AS 'Title', sh2.grade AS 'Grade', \nc1.numCredits AS 'Credit Hours', sh2.semYear AS 'Term' FROM course c1\nJOIN (SELECT sh1.studentID, sh1.crn, sh1.semYear, sec1.courseID, sh1.grade FROM studentHistory sh1\nJOIN section sec1 ON sh1.crn=sec1.crn) AS sh2 ON c1.courseID=sh2.courseID\nWHERE sh2.studentID=? ORDER BY SUBSTRING(sh2.semYear,2,4) ASC;",updateGrade:"UPDATE enrollment SET grade='?' WHERE studentID='?' AND crn='?';",updatePassword:"UPDATE loginInfo SET password='?' WHERE userID='?';",viewAdvisees:"SELECT students.studentID AS 'Student ID', CONCAT(students.LastName,', ',students.firstName) AS 'Student Name',\nstudents.phoneNumber AS 'Student Phone', l.userEmail AS 'Student Email' FROM loginInfo l\nRIGHT JOIN (SELECT facList.studentID, u.firstName, u.lastName, u.phoneNumber FROM user u\nJOIN (SELECT studentID FROM advisor WHERE facultyID=?) AS facList\nWHERE facList.studentID=u.userID) AS students ON students.studentID=l.userID\nORDER BY students.lastName ASC;",viewHolds:"SELECT sHolds.studentID AS 'Student ID', sHolds.studentName AS 'Student Name', \nh.holdDesc AS 'Description', h.holdType AS 'Type of Hold', sHolds.dateAdded AS 'Date Applied' FROM hold h\nJOIN (SELECT sh.holdName, sh.DateAdded, studentInfo.studentID, studentInfo.studentName FROM studentHold sh\nJOIN (SELECT s.studentID, CONCAT(u.lastName,', ',u.firstName) AS studentName FROM user u\nJOIN student s ON u.userID=s.studentID) AS studentInfo ON studentInfo.studentID=sh.studentID) AS sHolds\nON h.holdName=sHolds.holdName WHERE sHolds.studentID=?;",viewRegistration:"SELECT courseHist.*, e.grade AS 'Current Grade', DATE_FORMAT(e.dateEnrolled, '%m/%d/%Y') AS 'Date Enrolled' FROM enrollment e \nJOIN (SELECT list.crn AS 'CRN', list.courseID AS 'Course ID', c.courseName AS 'Course Name', list.roomID As 'Room',  \nlist.faculty AS 'Instructor', list.semYear as 'Semester', list.Days, list.Time FROM course c\nJOIN (SELECT s.crn, s.courseID, s.roomID, s.semYear, s.facultyID, CONCAT(u.lastName, ', ', u.firstName) AS 'faculty', \nCONCAT(SUBSTRING(tSlots1.day,1,1),'/',SUBSTRING(tSlots2.day,1,1)) as Days, tSlots2.Time FROM section s\nJOIN user u ON s.facultyID=u.userID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID JOIN day d ON tsd.dayID=d.dayID\nJOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1 ON s.timeslot1=tSlots1.TSID JOIN\n(SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day,\nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID\tJOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS list ON list.courseID=c.courseID ORDER BY list.semYear DESC, list.courseID) AS courseHist\nON e.crn=courseHist.crn WHERE courseHist.Semester='S2022' AND studentID=?;",viewStudentSchedule:"SELECT final.Student, final.studentID As 'StudentID', final.crn AS 'CRN', final.courseID AS 'Course ID',\nfinal.courseName AS 'Course Name', final.roomID AS 'Room', final.Instructor, final.semYear AS 'Semester', final.Days, final.Time FROM \n(SELECT CONCAT(u2.lastName,', ',u2.firstName) AS 'Student', studentSet.* FROM user u2 JOIN\n(SELECT e.studentID, facultySet.* FROM enrollment e JOIN\n(SELECT CONCAT(u.lastName,', ',u.firstName) AS 'Instructor', courseSet.* FROM user u JOIN\n(SELECT c.courseName, timeset.* FROM course c JOIN \n(SELECT s.crn, s.courseID, s.facultyID, s.roomID, s.semYear, CONCAT(SUBSTRING(tSlots1.Day,1,1),\n'/',SUBSTRING(tSlots2.Day,1,1)) AS Days, tSlots1.Time FROM section s JOIN\n(SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1\nON s.timeslot1=tSlots1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS timeset ON c.courseID=timeset.courseID) AS courseSet\nON u.userID=courseSet.facultyID) AS facultySet ON e.crn=facultySet.crn) AS studentSet\nON studentSet.studentID=u2.userID) AS final WHERE final.studentID=?;"}},141:function(e,t,s){},143:function(e,t,s){var o=s(140),r={courseSearch:o.courseSearch,degreeAuditPt1:o.degreeAuditPt1,degreeAuditPt2:o.degreeAuditPt2,assignedCourseList:o.facultyAssignedCourseList,facultyLoginInfo:o.facultyLoginInfo,recordAttendance:o.recordAttendance,studentHistory:o.studentHistory,transcript:o.transcript,updatePassword:o.updatePassword,viewHolds:o.viewHolds,viewRegistration:o.viewRegistration,viewStudentAdvisees:o.viewStudentAdvisees,viewStudentSchedule:o.viewStudentSchedule};e.exports=r},178:function(e,t){},18:function(e,t,s){var o=s(277),r={courseSearch:o.courseSearch,degreeAuditPt1:o.degreeAuditPt1,degreeAuditPt2:o.degreeAuditPt2,dropCourse:o.dropCourse,registerForCourse:o.registerForCourse,studentHistory:o.studentHistory,transcript:o.transcript,updatePassword:o.updatePassword,viewAdvisor:o.viewAdvisor,viewHolds:o.viewHolds,viewRegistration:o.viewRegistration,viewStudentLoginInfo:o.viewStudentLoginInfo};e.exports=r},180:function(e,t){},190:function(e,t){},192:function(e,t){},219:function(e,t){},221:function(e,t){},222:function(e,t){},227:function(e,t){},229:function(e,t){},235:function(e,t){},237:function(e,t){},256:function(e,t){},268:function(e,t){},271:function(e,t){},275:function(e,t){e.exports={adminLoginInfo:"SELECT u.userID, u.userType, u.firstName, u.lastName, l.userEmail, l.password FROM\nuser u RIGHT JOIN loginInfo l ON u.userID=l.userID WHERE u.userID=?;",courseSearch:"SELECT finalList.crn AS 'CRN', finalList.courseID AS 'Course ID', finalList.courseName AS 'Course Name', finalList.roomID AS 'Room', \nfinalList.Instructor, finalList.Days, finalList.Time, finalList.semYear AS 'Semester' FROM\n(SELECT courseList.*, times1.TSID, CONCAT (substring(times1.day,1,1),'/',substring(times2.day,1,1)) AS 'Days', times1.Time FROM\n(SELECT S2022.crn, S2022.courseID, S2022.courseName, S2022.roomID,\nCONCAT (u.firstName, ', ', u.lastName) as 'Instructor', S2022.semYear, S2022.timeSlot1, S2022.timeSlot2 FROM user u\nRIGHT JOIN (SELECT s.crn, s.courseID, catalog.courseName, catalog.deptName, s.roomID, s.facultyID, s.semYear, s.timeSlot1, s.timeSlot2 from section s\nRIGHT JOIN (SELECT d.deptID, d.deptName, c.courseID, c.courseName FROM dept d\nJOIN course c ON d.deptID=c.deptID) AS catalog ON s.courseID=catalog.courseID\nWHERE s.semYear='S2022') AS S2022 ON u.userID=S2022.facultyID) AS courseList\nLEFT JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as times1\nON courseList.timeSlot1=times1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as times2\nON courseList.timeslot2=times2.TSID) AS finalList WHERE finalList.courseID LIKE '%?%';",createCourse:"INSERT INTO course(courseID, courseName, numCredits, deptID) VALUES('?', '?', '?', '?');",createUser:"INSERT INTO user(userID, userType, firstName, lastName, phoneNumber, DOB, street, city, state, zip)\nVALUES('?', '?', '?', '?', '?', '?', '?', '?', '?', '?');",degreeAuditPt1:"SELECT COUNT(*) AS 'Courses Completed', total.total AS 'Courses Needed', \nCONCAT(FORMAT((COUNT(*)/total.total)*100,2),'%') AS 'Percent Complete' FROM studentHistory sh\nJOIN (SELECT sm.studentID, sm.majorID, COUNT(*) AS 'total' FROM studentMajor sm\nJOIN majorCourse mc ON sm.majorID=mc.majorID\nWHERE sm.studentID='?') AS total\nON sh.studentID=total.studentID;",degreeAuditPt2:"SELECT c1.courseID AS 'Course', c1.courseName AS 'Title', sh2.grade AS 'Grade', \nc1.numCredits AS 'Credits', sh2.semYear AS 'Term' FROM course c1\nJOIN (SELECT sh1.studentID, sh1.crn, sh1.semYear, sec1.courseID, sh1.grade FROM studentHistory sh1\nJOIN section sec1 ON sh1.crn=sec1.crn) AS sh2 ON c1.courseID=sh2.courseID\nWHERE sh2.studentID='?' ORDER BY SUBSTRING(sh2.semYear,2,4) ASC;",deleteCourse:"DELETE FROM course WHERE courseID='?';",dropCourse:"DELETE FROM enrollment WHERE studentID='?' AND crn='?';",facultyCourseList:"SELECT list.crn AS 'CRN', list.courseID AS 'Course ID', c.courseName AS 'Course Name', list.roomID As 'Room', \nlist.faculty AS 'Instructor', list.semYear as 'Semester', list.Days, list.Time, list.facultyID FROM course c\nJOIN (SELECT s.crn, s.courseID, s.roomID, s.semYear, s.facultyID, CONCAT(u.lastName, ', ', u.firstName) AS 'faculty', \nCONCAT(SUBSTRING(tSlots1.day,1,1),'/',SUBSTRING(tSlots2.day,1,1)) as Days, tSlots2.Time FROM section s\nJOIN user u ON s.facultyID=u.userID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1\nON s.timeslot1=tSlots1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS list ON list.courseID=c.courseID WHERE (list.semYear='F2021' OR list.semYear='S2022') \nORDER BY list.semYear ASC;",masterScheduleAdd:"INSERT INTO section(crn, courseID, timeSlot1, timeSlot2, facultyID, roomID, semYear) VALUES ('?', '?','?','?','?','?','?');",masterScheduleRemove:"DELETE FROM section WHERE crn='?';",modifyCourse:"UPDATE course\nSET courseID='?', courseName='?', numCredits='?', deptID='?'\nWHERE courseID='?';",modifyUser:"UPDATE user \nSET firstName='?', lastName='?', phoneNumber='?', DOB='?', street='?', city='?', state='?', zip='?'\nWHERE userID='?';",registerForCourse:"INSERT INTO enrollment(studentID, crn, dateEnrolled, grade) VALUES ('?', '?', CURDATE(), 'IP');",studentHistory:"SELECT instructor.studentID AS 'Student ID', instructor.crn AS 'CRN', instructor.courseID AS 'Course ID', \ninstructor.courseName AS 'Course Name', instructor.semYear AS 'Semester', \nCONCAT(u.lastName,', ',u.firstName) AS 'Professor', instructor.grade AS 'Instructor' FROM user u JOIN\n(SELECT f.facultyID, courseHistory.studentID, courseHistory.courseID, courseHistory.courseName, courseHistory.crn, courseHistory.semYear, courseHistory.grade FROM faculty f\nJOIN (SELECT history.studentID, course.courseID, course.courseName, history.crn, history.semYear, history.grade, history.facultyID FROM course\nJOIN (SELECT sh.studentID, sh.crn, s.courseID, sh.semYear, sh.grade, s.facultyID FROM studentHistory sh JOIN \nsection s ON sh.crn=s.crn) AS history ON history.courseID=course.courseID) AS courseHistory\nON courseHistory.facultyID=f.facultyID) AS instructor ON u.userID=instructor.facultyID\nWHERE studentID='?' ORDER BY studentID ASC;",studentLoginInfo:"SELECT u.userID, u.userType, u.firstName, u.lastName, l.userEmail FROM\nuser u RIGHT JOIN loginInfo l ON u.userID=l.userID WHERE u.userID='?';",timeSlotDisplay:"SELECT timeTable.timeSlotID, timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable;",transcript:"SELECT SUBSTRING(c1.courseID,1,2) AS 'Subject', SUBSTRING(c1.courseID,3,3) AS 'Course', c1.courseName AS 'Title', sh2.grade AS 'Grade', \nc1.numCredits AS 'Credit Hours', sh2.semYear AS 'Term' FROM course c1\nJOIN (SELECT sh1.studentID, sh1.crn, sh1.semYear, sec1.courseID, sh1.grade FROM studentHistory sh1\nJOIN section sec1 ON sh1.crn=sec1.crn) AS sh2 ON c1.courseID=sh2.courseID\nWHERE sh2.studentID='?' ORDER BY SUBSTRING(sh2.semYear,2,4) ASC;",updatePassword:"UPDATE loginInfo SET password='?' WHERE userID=?;",viewAllUsers:"SELECT u.userID, u.userType, u.firstName, u.lastName, u.phoneNumber, u.DOB, u.street, u.city, u.state, u.zip, l.userEmail \nFROM user u JOIN loginInfo l ON u.userID=l.userID;",viewCourseHistory:"SELECT list.crn AS 'CRN', list.courseID AS 'Course ID', c.courseName AS 'Course Name', list.roomID As 'Room', \nlist.faculty AS 'Instructor', list.semYear as 'Semester', list.Days, list.Time FROM course c\nJOIN (SELECT s.crn, s.courseID, s.roomID, s.semYear, s.facultyID, CONCAT(u.lastName, ', ', u.firstName) AS 'faculty', \nCONCAT(SUBSTRING(tSlots1.day,1,1),'/',SUBSTRING(tSlots2.day,1,1)) as Days, tSlots2.Time FROM section s\nJOIN user u ON s.facultyID=u.userID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1\nON s.timeslot1=tSlots1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS list ON list.courseID=c.courseID ORDER BY list.semYear DESC, list.courseID;",viewFacultyAdvisors:"SELECT adv.facultyID as 'Faculty ID', CONCAT(adv.firstName,' ',adv.lastName) AS 'Advisor Name', adv.phoneNumber AS 'Advisor Phone', l.userEmail AS 'Advisor Email' FROM loginInfo l\nRIGHT JOIN (SELECT facID.facultyID, u.firstName, u.lastName, u.phoneNumber FROM user u JOIN\n(SELECT facultyID FROM advisor) AS facID WHERE facID.facultyID=u.userID) AS adv ON adv.facultyID=l.userID;",viewHolds:"SELECT sHolds.studentID AS 'Student ID', sHolds.studentName AS 'Student Name', \nh.holdDesc AS 'Description', h.holdType AS 'Type of Hold', sHolds.dateAdded AS 'Date Applied' FROM hold h\nJOIN (SELECT sh.holdName, sh.DateAdded, studentInfo.studentID, studentInfo.studentName FROM studentHold sh\nJOIN (SELECT s.studentID, CONCAT(u.lastName,', ',u.firstName) AS studentName FROM user u\nJOIN student s ON u.userID=s.studentID) AS studentInfo ON studentInfo.studentID=sh.studentID) AS sHolds\nON h.holdName=sHolds.holdName WHERE sHolds.studentID='?';",viewRegistration:"SELECT courseHist.*, e.grade AS 'Current Grade', DATE_FORMAT(e.dateEnrolled, '%m/%d/%Y') AS 'Date Enrolled' FROM enrollment e \nJOIN (SELECT list.crn AS 'CRN', list.courseID AS 'Course ID', c.courseName AS 'Course Name', list.roomID As 'Room',  \nlist.faculty AS 'Instructor', list.semYear as 'Semester', list.Days, list.Time FROM course c\nJOIN (SELECT s.crn, s.courseID, s.roomID, s.semYear, s.facultyID, CONCAT(u.lastName, ', ', u.firstName) AS 'faculty', \nCONCAT(SUBSTRING(tSlots1.day,1,1),'/',SUBSTRING(tSlots2.day,1,1)) as Days, tSlots2.Time FROM section s\nJOIN user u ON s.facultyID=u.userID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID JOIN day d ON tsd.dayID=d.dayID\nJOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1 ON s.timeslot1=tSlots1.TSID JOIN\n(SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day,\nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID\tJOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS list ON list.courseID=c.courseID ORDER BY list.semYear DESC, list.courseID) AS courseHist\nON e.crn=courseHist.crn WHERE courseHist.Semester='S2022' AND studentID='700217149';",viewStudentAdvisees:"SELECT students.studentID AS 'Student ID', CONCAT(students.LastName,', ',students.firstName) AS 'Student Name',\nstudents.phoneNumber AS 'Student Phone', l.userEmail AS 'Student Email' FROM loginInfo l\nRIGHT JOIN (SELECT facList.studentID, u.firstName, u.lastName, u.phoneNumber FROM user u\nJOIN (SELECT studentID FROM advisor) AS facList WHERE facList.studentID=u.userID) AS students\nON students.studentID=l.userID ORDER BY students.lastName ASC;",viewStudentSchedule:"SELECT final.Student, final.studentID As 'StudentID', final.crn AS 'CRN', final.courseID AS 'Course ID',\nfinal.courseName AS 'Course Name', final.roomID AS 'Room', final.Instructor, final.semYear AS 'Semester', final.Days, final.Time FROM \n(SELECT CONCAT(u2.lastName,', ',u2.firstName) AS 'Student', studentSet.* FROM user u2 JOIN\n(SELECT e.studentID, facultySet.* FROM enrollment e JOIN\n(SELECT CONCAT(u.lastName,', ',u.firstName) AS 'Instructor', courseSet.* FROM user u JOIN\n(SELECT c.courseName, timeset.* FROM course c JOIN \n(SELECT s.crn, s.courseID, s.facultyID, s.roomID, s.semYear, CONCAT(SUBSTRING(tSlots1.Day,1,1),\n'/',SUBSTRING(tSlots2.Day,1,1)) AS Days, tSlots1.Time FROM section s JOIN\n(SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1\nON s.timeslot1=tSlots1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS timeset ON c.courseID=timeset.courseID) AS courseSet\nON u.userID=courseSet.facultyID) AS facultySet ON e.crn=facultySet.crn) AS studentSet\nON studentSet.studentID=u2.userID) AS final WHERE final.studentID=?;"}},276:function(e,t,s){var o=s(140);e.exports.Faculty=function(){var e={},t=o.getStudentHistory,s=o.getStudentHolds,r=o.getListOfStudentsFacultyIsAdvising;return e.getStudentHistory=t,e.getStudentHolds=s,e.getListOfStudentsFacultyIsAdvising=r,e}()},277:function(e,t){e.exports={courseSearch:"SELECT finalList.crn AS 'CRN', finalList.courseID AS 'Course ID', finalList.courseName AS 'Course Name', finalList.roomID AS 'Room', \nfinalList.Instructor, finalList.Days, finalList.Time, finalList.semYear AS 'Semester' FROM\n(SELECT courseList.*, times1.TSID, CONCAT (substring(times1.day,1,1),'/',substring(times2.day,1,1)) AS 'Days', times1.Time FROM\n(SELECT S2022.crn, S2022.courseID, S2022.courseName, S2022.roomID,\nCONCAT (u.firstName, ', ', u.lastName) as 'Instructor', S2022.semYear, S2022.timeSlot1, S2022.timeSlot2 FROM user u\nRIGHT JOIN (SELECT s.crn, s.courseID, catalog.courseName, catalog.deptName, s.roomID, s.facultyID, s.semYear, s.timeSlot1, s.timeSlot2 from section s\nRIGHT JOIN (SELECT d.deptID, d.deptName, c.courseID, c.courseName FROM dept d\nJOIN course c ON d.deptID=c.deptID) AS catalog ON s.courseID=catalog.courseID\nWHERE s.semYear='S2022') AS S2022 ON u.userID=S2022.facultyID) AS courseList\nLEFT JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as times1\nON courseList.timeSlot1=times1.TSID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID JOIN period p ON tsp.periodID=p.periodID) AS timeTable) as times2\nON courseList.timeslot2=times2.TSID) AS finalList WHERE finalList.courseID LIKE '%?%';",degreeAuditPt1:"SELECT COUNT(*) AS 'Courses Completed', total.total AS 'Courses Needed', \nCONCAT(FORMAT((COUNT(*)/total.total)*100,2),'%') AS 'Percent Complete' FROM studentHistory sh\nJOIN (SELECT sm.studentID, sm.majorID, COUNT(*) AS 'total' FROM studentMajor sm\nJOIN majorCourse mc ON sm.majorID=mc.majorID\nWHERE sm.studentID='?') AS total\nON sh.studentID=total.studentID;",degreeAuditPt2:"SELECT c1.courseID AS 'Course', c1.courseName AS 'Title', sh2.grade AS 'Grade', \nc1.numCredits AS 'Credits', sh2.semYear AS 'Term' FROM course c1\nJOIN (SELECT sh1.studentID, sh1.crn, sh1.semYear, sec1.courseID, sh1.grade FROM studentHistory sh1\nJOIN section sec1 ON sh1.crn=sec1.crn) AS sh2 ON c1.courseID=sh2.courseID\nWHERE sh2.studentID='?' ORDER BY SUBSTRING(sh2.semYear,2,4) ASC;",dropCourse:"DELETE FROM enrollment WHERE studentID='?' AND crn='?';",registerForCourse:"INSERT INTO enrollment(studentID, crn, dateEnrolled, grade) VALUES ('?', '?', CURDATE(), 'IP');",studentHistory:"SELECT instructor.studentID AS 'Student ID', instructor.crn AS 'CRN', instructor.courseID AS 'Course ID', \ninstructor.courseName AS 'Course Name', instructor.semYear AS 'Semester', \nCONCAT(u.lastName,', ',u.firstName) AS 'Professor', instructor.grade AS 'Instructor' FROM user u JOIN\n(SELECT f.facultyID, courseHistory.studentID, courseHistory.courseID, courseHistory.courseName, courseHistory.crn, courseHistory.semYear, courseHistory.grade FROM faculty f\nJOIN (SELECT history.studentID, course.courseID, course.courseName, history.crn, history.semYear, history.grade, history.facultyID FROM course\nJOIN (SELECT sh.studentID, sh.crn, s.courseID, sh.semYear, sh.grade, s.facultyID FROM studentHistory sh JOIN \nsection s ON sh.crn=s.crn) AS history ON history.courseID=course.courseID) AS courseHistory\nON courseHistory.facultyID=f.facultyID) AS instructor ON u.userID=instructor.facultyID\nWHERE studentID='?' ORDER BY studentID ASC;",transcript:"SELECT SUBSTRING(c1.courseID,1,2) AS 'Subject', SUBSTRING(c1.courseID,3,3) AS 'Course', c1.courseName AS 'Title', sh2.grade AS 'Grade', \nc1.numCredits AS 'Credit Hours', sh2.semYear AS 'Term' FROM course c1\nJOIN (SELECT sh1.studentID, sh1.crn, sh1.semYear, sec1.courseID, sh1.grade FROM studentHistory sh1\nJOIN section sec1 ON sh1.crn=sec1.crn) AS sh2 ON c1.courseID=sh2.courseID\nWHERE sh2.studentID='?' ORDER BY SUBSTRING(sh2.semYear,2,4) ASC;",updatePassword:"UPDATE loginInfo SET password='?' WHERE userID='?';",viewAdvisor:"SELECT CONCAT(adv.firstName,' ',adv.lastName) AS 'Advisor Name', adv.phoneNumber AS 'Advisor Phone', l.userEmail AS 'Advisor Email' FROM loginInfo l\nRIGHT JOIN (SELECT facID.facultyID, u.firstName, u.lastName, u.phoneNumber FROM user u JOIN\n(SELECT facultyID FROM advisor WHERE studentID='?') AS facID WHERE facID.facultyID=u.userID) AS adv\nON adv.facultyID=l.userID;",viewHolds:"SELECT sHolds.studentID AS 'Student ID', sHolds.studentName AS 'Student Name', \nh.holdDesc AS 'Description', h.holdType AS 'Type of Hold', DATE_FORMAT(sHolds.dateAdded, '%m/%d/%Y') AS 'Date Added' FROM hold h \nJOIN (SELECT sh.holdName, sh.DateAdded, studentInfo.studentID, studentInfo.studentName FROM studentHold sh\nJOIN (SELECT s.studentID, CONCAT(u.lastName,', ',u.firstName) AS studentName FROM user u\nJOIN student s ON u.userID=s.studentID) AS studentInfo ON studentInfo.studentID=sh.studentID) AS sHolds\nON h.holdName=sHolds.holdName WHERE sHolds.studentID='?';",viewRegistration:"SELECT courseHist.*, e.grade AS 'Current Grade', DATE_FORMAT(e.dateEnrolled, '%m/%d/%Y') AS 'Date Enrolled' FROM enrollment e \nJOIN (SELECT list.crn AS 'CRN', list.courseID AS 'Course ID', c.courseName AS 'Course Name', list.roomID As 'Room',  \nlist.faculty AS 'Instructor', list.semYear as 'Semester', list.Days, list.Time FROM course c\nJOIN (SELECT s.crn, s.courseID, s.roomID, s.semYear, s.facultyID, CONCAT(u.lastName, ', ', u.firstName) AS 'faculty', \nCONCAT(SUBSTRING(tSlots1.day,1,1),'/',SUBSTRING(tSlots2.day,1,1)) as Days, tSlots2.Time FROM section s\nJOIN user u ON s.facultyID=u.userID JOIN (SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day, \nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID JOIN day d ON tsd.dayID=d.dayID\nJOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots1 ON s.timeslot1=tSlots1.TSID JOIN\n(SELECT timeTable.timeSlotID AS 'TSID', timeTable.weekDay AS day,\nCONCAT(TIME_FORMAT(timeTable.periodStart, '%h:%i%p'),' - ',TIME_FORMAT(timeTable.periodEnd, '%h:%i%p')) AS 'Time' FROM\n(SELECT ts.timeSlotID, ts.dayID, ts.periodID, d.weekday, p.periodStart, p.periodEnd FROM timeSlot ts\nJOIN tsDay tsd ON ts.timeSlotID=tsd.timeSlotID JOIN tsPeriod tsp ON ts.timeslotID=tsp.timeSlotID\nJOIN day d ON tsd.dayID=d.dayID\tJOIN period p ON tsp.periodID=p.periodID) AS timeTable) as tSlots2\nON s.timeslot2=tSlots2.TSID) AS list ON list.courseID=c.courseID ORDER BY list.semYear DESC, list.courseID) AS courseHist\nON e.crn=courseHist.crn WHERE courseHist.Semester='S2022' AND studentID='?';",viewStudentLoginInfo:"SELECT u.userID, u.userType, u.firstName, u.lastName, l.userEmail, l.password FROM\nuser u RIGHT JOIN loginInfo l ON u.userID=l.userID WHERE u.userID='?';"}},278:function(e,t,s){"use strict";s.r(t);var o=s(5),r=s.n(o),n=s(2),a=s.n(n),i=(s(48),s(49),s(46)),d=s(6),c=s(7),l=s(9),u=s(8),m=(s(38),s(0)),p=function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(d.a)(this,s),(o=t.call(this,e)).makeFields=function(e){var t=[],s=(12%e.length).toString();return s="form-group "+s,e.map((function(s,o){e.length%2==0?t.push(Object(m.jsx)("input",{id:e[o],onChange:function(t){e[o]=t.target.value,console.log(e[o])},placeholder:e[o]})):(e[o],e[o])})),t},o.state={fields:[]},o}return Object(c.a)(s,[{key:"render",value:function(){return Object(m.jsx)("div",{className:"container-fluid",id:"loginFormContainer","max-height":"80%",children:Object(m.jsx)("form",{children:this.makeFields(this.props.fields)})})}}]),s}(o.Component),I=function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(d.a)(this,s),(o=t.call(this,e)).process=function(e){var t=[];return e.map((function(e){t.push(e),console.log("Found a match")})),t},o.make=function(e){for(var t=[],s=function(s){console.log("Making element"),t.push(Object(m.jsx)("div",{className:"col-2",children:Object(m.jsx)("input",{id:e[s],type:"text",className:"form-control",placeholder:e[s],onChange:function(t){o.props.tempData[e[s]]=t.target.value,o.props.updateParams(e[s],t.target.value),console.log(o.props.tempData[e[s]])}})}))},r=0;r<e.length;r++)s(r);return console.log("Check to see if forms were made."),t},o.clear=function(){a.a.render(Object(m.jsx)("div",{}),document.getElementById("test2")),a.a.render(Object(m.jsx)("div",{}),document.getElementById("test3")),a.a.render(Object(m.jsx)("div",{}),document.getElementById("test4"))},o.state={value:""},o}return Object(c.a)(s,[{key:"render",value:function(){var e=this,t=this.process(this.props.fields),s=this.make(t);return Object(m.jsx)("div",{className:"container-fluid",id:"loginFormContainer","max-height":"80%",style:{justifyContent:"center"},children:Object(m.jsx)("form",{id:"form2",children:Object(m.jsxs)("div",{className:"row",children:[s," ",Object(m.jsxs)("div",{className:"col-2",children:[Object(m.jsx)("button",{type:"submit",style:{marginBottom:"5px",display:"inline-block",position:"relative",bottom:"5px"},className:"btn btn-primary mt-2",onClick:function(t){t.preventDefault(),e.props.updateParams(),e.props.relevantQuery()},children:"Submit"}),Object(m.jsx)("button",{style:{marginBottom:"5px",display:"inline-block",position:"relative",bottom:"5px"},className:"btn btn-secondary mt-2",onClick:function(t){t.preventDefault(),e.clear()},children:"Clear"})]})]})})})}}]),s}(o.Component),O=function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(d.a)(this,s),(o=t.call(this,e)).makeForm=function(e,t){var s;e.map((function(e){console.log(e)})),s=e;var r=Object(m.jsx)("div",{className:"main",style:{justifyContent:"center"},children:Object(m.jsx)(I,{fields:s,tempData:o.state.tempData,updateParams:o.doHandleUpdateParams,relevantQuery:t})});a.a.render(r,document.getElementById("forms"))},o.wrapper=function(e,t){a.a.render(Object(m.jsx)("div",{children:Object(m.jsx)(p,{fields:["crigne"]})}),document.getElementById("root"))},o.doHandleUpdateParams=function(e,t){console.log(e),o.setState(Object(i.a)({key:e},"key",t)),console.log("NAVBAR: Changed state of relevant key: ",e),console.log("Temp Data ",e," within NavBar is now set to ",t,"!"," Now attempting to bubble up to Query Handler..."),o.props.updateParams(e,t)},o.state={chosenUserTypeNavEleArray:[],curEle:"",reqBodyObj:{},tempData:{userID:"",Instructor:"",crn:"",courseID:"",courseName:"",numCredits:"",deptID:"",userType:"",firstName:"",lastName:"",phoneNum:"",DOB:"",street:"",studentID:"",email:"",city:"",state:"",zip:""},userID:"542",Admin:[{name:"Home",onClick:function(){return console.log("Pressed home button. Add a redirect somewhere maybe?")}},{name:"Create Course",onClick:function(){o.makeForm(["courseID","courseName","numCredits","deptID"],o.props.createCourse)}},{name:"Search Course",onClick:function(){o.makeForm(["crn","courseID","courseName","Instructor"],o.props.courseSearch)}},{name:"Create User",onClick:function(){return o.makeForm(["userID","userType","firstName","lastName","phoneNumber","DOB","street","city","state","zip"],o.props.createUser)}},{name:"Delete Course",onClick:function(){return o.makeForm(["courseID"],o.props.deleteCourse)}},{name:"Drop Course",onClick:function(){o.makeForm(["studentID","crn"],o.props.dropStudentCourse)}},{name:"Modify Course",onClick:function(){return o.makeForm(["courseID","courseName","numCredits","deptID"],o.props.modifyCourse)}},{name:"Modify User",onClick:function(){return o.makeForm(["firstName","lastName","phoneNumber","DOB","street","city","state","zip","userID"],o.props.modifyUser)}},{name:"Register Student for Course",onClick:function(){return o.makeForm(["studentID","crn"],o.props.registerStudentForCourse)}},{name:"Get Transcript",onClick:function(){return o.makeForm(["studentID"],o.props.getTranscript)}},{name:"Update Password",onClick:function(){return o.makeForm(["password","userID"],o.props.updatePassword)}},{name:"View All Users",onClick:function(){return o.props.viewAllUsers()}},{name:"View Student Advisees",onClick:function(){return o.props.viewStudentAdvisees()}},{name:"View Faculty Advisors",onClick:function(){return o.props.viewFacultyAdvisors()}},{name:"View Student Course History",onClick:function(){return o.makeForm(["studentID"],o.props.studentHistory)}},{name:"View Student Degree Audit",onClick:function(){o.makeForm(["studentID"],o.props.degreeAudit)}},{name:"View Student Holds",onClick:function(){return o.makeForm(["studentID"],o.props.viewStudentHolds)}},{name:"View Student Registration",onClick:function(){return o.makeForm(["studentID"],o.props.viewRegistration)}},{name:"View Student Schedule",onClick:function(){return o.makeForm(["studentID"],o.props.viewStudentSchedule)}},{name:"View Student Transcript",onClick:function(){return o.makeForm(["studentID"],o.props.viewStudentTranscript)}}],Student:[{name:"Home",onClick:"#"},{name:"Faculty Login Info",onClick:function(){}},{name:"Course Search",onClick:function(){return o.makeForm(["courseID"],o.props.courseSearch)}},{name:"Drop Course",onClick:function(){o.makeForm(["studentID","crn"],o.props.dropCourse)}},{name:"Degree Audit",onClick:function(){}},{name:"Register for Course",onClick:function(){return o.makeForm(["studentID","crn"],o.props.registerForCourse)}},{name:"Student History",onClick:function(){return o.props.studentHistory()}},{name:"Student Login Info",onClick:function(){return o.props.studentLoginInfo()}},{name:"Unofficial Transcript",onClick:function(){return o.props.transcript()}},{name:"Update Password",onClick:function(){return o.makeForm(["password","userID"],o.props.updatePassword)}},{name:"View Advisor",onClick:function(){return o.props.viewAdvisor()}},{name:"View Holds",onClick:function(){return o.props.viewHolds()}},{name:"View Registration",onClick:function(){return o.props.viewRegistration()}},{name:"Logout",onClick:"#"}],Faculty:[{name:"Home",onClick:"#"},{name:"Assigned Course List",onClick:function(){o.props.assignedCourseList()}},{name:"Course Search",onClick:function(){o.makeForm(["crn","courseID","courseName","Instructor"],o.props.courseSearch)}},{name:"Degree Audit",onClick:function(){return o.makeForm(["studentID"],o.props.degreeAudit)}},{name:"Faculty Login Info",onClick:function(){return o.props.facultyLoginInfo()}},{name:"Record Attendance",onClick:function(){return o.makeForm(["studentID","crn","isPresent","date"],o.props.recordAttendance)}},{name:"Student History",onClick:function(){return o.makeForm(["studentID"],o.props.studentHistory)}},{name:"Unofficial Transcript",onClick:function(){return o.makeForm(["studentID"],o.props.transcript)}},{name:"Update Password",onClick:function(){return o.makeForm(["password"],o.props.updatePassword)}},{name:"View Advisees",onClick:function(){return o.props.viewStudentAdvisees()}},{name:"View Holds",onClick:function(){return o.makeForm(["studentID"],o.props.viewHolds)}},{name:"View Registration",onClick:function(){return o.makeForm(["studentID"],o.props.viewRegistration)}},{name:"View Student Schedule",onClick:function(){return o.makeForm(["studentID"],o.props.viewStudentSchedule)}},{name:"Logout",onClick:"./Logout"}]},o}return Object(c.a)(s,[{key:"render",value:function(){var e=[];switch(this.props.userType){case"Admin":e=this.state.Admin,console.log("Matched admin");break;case"Faculty":e=this.state.Faculty,console.log("Matched faculty");break;case"Student":e=this.state.Student,console.log("Chose student")}var t=e.map((function(e){return Object(m.jsx)("div",{children:Object(m.jsx)("a",{class:"nav-link",id:"barBody",href:"#v-pills-home",role:"tabpanel",onClick:e.onClick,children:e.name})})}));return Object(m.jsx)("div",{className:"Sidebar",children:Object(m.jsx)("div",{className:"container",id:"row",role:"tablist","aria-orientation":"vertical",children:Object(m.jsx)("nav",{class:"menu",children:t})})})}}]),s}(o.Component),S=s(10),D=function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(){var e;Object(d.a)(this,s),(e=t.call(this)).state={credentials:{user:"",pass:"",userType:"",auth:""}},e.populateFields=function(t){var s,o;switch(t){case"Admin":s="mguyanb6@neweastbury.edu",o="6RtZQZWl38TO",t;break;case"Faculty":s="sgoldwater5a@neweastbury.edu",o="sbzd",t;break;case"ResearchStaff":s="mrapperbd@neweastbury.edu",o="ooKCSHmUO",t;break;case"Student":s="smashamlw@neweastbury.edu",o="jSNHlqbS",t}var r={user:s,pass:o,userType:t};e.setState({credentials:r}),console.log(e.state.credentials)},e.update=function(){},e.makeFields=function(){var e=["userID","firstName"],t=[];e.map((function(s,o){t.push(Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:e[o],onChange:function(t){e[o]=t.target.value,console.log(e[o])},placeholder:e[o]})}))}))};var o=e.populateFields.bind(Object(S.a)(e));return e.populateFields=o,e}return Object(c.a)(s,[{key:"render",value:function(){var e=this,t=this.state.credentials,s=t.user,o=t.pass,r=t.userType;return Object(m.jsxs)("div",{className:"container-fluid",id:"loginFormContainer","max-height":"80%",children:[Object(m.jsx)("button",{onClick:function(){return e.populateFields("Admin")},children:"Auto Populate ADMIN"}),Object(m.jsx)("button",{onClick:function(){return e.populateFields("Faculty")},children:"Auto Populate FACULTY"}),Object(m.jsx)("button",{onClick:function(){return e.populateFields("ResearchStaff")},children:"Auto Populate RESEARCH STAFF"}),Object(m.jsx)("button",{onClick:function(){return e.populateFields("Student")},children:"Auto Populate STUDENT"}),Object(m.jsxs)("form",{children:[Object(m.jsxs)("div",{className:"row",children:[Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"email",type:"text",className:"form-control",placeholder:"E-mail",onChange:function(e){s=e.target.value,console.log(s)}})}),this.makeFields(),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"password",type:"password",className:"form-control",placeholder:"Password",onChange:function(e){o=e.target.value,console.log("Changing",o)}})})]}),Object(m.jsx)("div",{className:"row",children:Object(m.jsxs)("div",{className:"form-group col-3",children:[Object(m.jsx)("label",{for:"inputState"}),Object(m.jsxs)("select",{id:"inputState",onChange:function(e){r=e.target.value},className:"form-control",defaultValue:"Choose User Type",children:[Object(m.jsx)("option",{children:"Choose User Type"}),Object(m.jsx)("option",{value:"Student",children:"Student"}),Object(m.jsx)("option",{value:"Admin",children:"Admin"}),Object(m.jsx)("option",{value:"Faculty",children:"Faculty"}),Object(m.jsx)("option",{value:"ResearchStaff",children:"Research Staff"})]})]})}),Object(m.jsx)("div",{className:"row",children:Object(m.jsx)("div",{className:"col-12",children:Object(m.jsx)("button",{type:"submit",className:"btn btn-primary mt-3",onClick:function(t){t.preventDefault(),e.props.onLoginSubmit(s,o,r)},children:"Sign in"})})})]})]})}}]),s}(o.Component),N=s(1),h=s.n(N);s(84);var y=s(75),f=s.n(y),T=(o.Component,function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(){var e;Object(d.a)(this,s),(e=t.call(this)).state={credentials:{user:"",pass:"",userType:"",auth:""},tempData:{userID:"",courseID:"",crn:"",courseName:"",numCredits:"",deptID:"",userType:"",firstName:"",Instructor:"",lastName:"",phoneNum:"",DOB:"",street:"",studentID:"",email:"",city:"",state:"",zip:""}},e.populateFields=function(e){},e.clearFields=function(e){1==e&&document.getElementById("form1").reset(),2==e&&document.getElementById("form2").reset()},e.showFields=function(){var t=e.state.tempData,s=t.userID,o=t.courseID,r=t.courseName,n=t.numCredits,i=t.crn,d=t.deptID,c=t.userType,l=t.firstName,u=t.lastName,p=t.phoneNum,I=t.DOB,O=t.street,S=t.studentID,D=t.email,N=t.city,h=t.state,y=t.zip,f=t.Instructor,T=Object(m.jsxs)("div",{className:"container-fluid",id:"loginFormContainer","max-height":"80%",children:[Object(m.jsx)("button",{onClick:e.hideFields,children:"Hide"}),Object(m.jsxs)("form",{id:"form2",children:[Object(m.jsxs)("div",{className:"row",children:[Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"userID",type:"text",className:"form-control",placeholder:"userID",onChange:function(e){s=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"studentID",type:"text",className:"form-control",placeholder:"studentID",onChange:function(e){S=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"email",type:"text",className:"form-control",placeholder:"email",onChange:function(e){D=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"courseID",type:"text",className:"form-control",placeholder:"courseID",onChange:function(e){o=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"firstName",type:"text",className:"form-control",placeholder:"firstName",onChange:function(e){l=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"lastName",type:"text",className:"form-control",placeholder:"lastName",onChange:function(e){u=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"phoneNum",type:"text",className:"form-control",placeholder:"phoneNum",onChange:function(e){p=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"password",type:"text",className:"form-control",placeholder:"street",onChange:function(e){I=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"street",type:"text",className:"form-control",placeholder:"street",onChange:function(e){O=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"city",type:"text",className:"form-control",placeholder:"city",onChange:function(e){N=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"state",type:"text",className:"form-control",placeholder:"state",onChange:function(e){h=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"zip",type:"text",className:"form-control",placeholder:"zip",onChange:function(e){y=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"courseID",type:"text",className:"form-control",placeholder:"courseID",onChange:function(e){o=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"courseName",type:"text",className:"form-control",placeholder:"courseName",onChange:function(e){r=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"numCredits",type:"text",className:"form-control",placeholder:"numCredits",onChange:function(e){n=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"crn",type:"text",className:"form-control",placeholder:"crn",onChange:function(e){i=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"deptID",type:"text",className:"form-control",placeholder:"deptID",onChange:function(e){d=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"Instructor",type:"text",className:"form-control",placeholder:"Instructor",onChange:function(e){f=e.target.value}})})]}),Object(m.jsx)("div",{className:"row",children:Object(m.jsxs)("div",{className:"form-group col-3",children:[Object(m.jsx)("label",{for:"inputState"}),Object(m.jsxs)("select",{id:"inputState",onChange:function(e){c=e.target.value},className:"form-control",defaultValue:"Choose User Type",children:[Object(m.jsx)("option",{children:"Choose User Type"}),Object(m.jsx)("option",{value:"Student",children:"Student"}),Object(m.jsx)("option",{value:"Admin",children:"Admin"}),Object(m.jsx)("option",{value:"Faculty",children:"Faculty"}),Object(m.jsx)("option",{value:"ResearchStaff",children:"Research Staff"})]})]})}),Object(m.jsx)("div",{className:"row",children:Object(m.jsx)("div",{className:"col-12",children:Object(m.jsx)("button",{type:"submit",className:"btn btn-primary mt-3",onClick:function(t){t.preventDefault(),e.props.passQueryParams({userID:s,courseID:o,crn:i,userType:c,firstName:l,lastName:u,phoneNum:p,DOB:I,street:O,studentID:S,email:D,city:N,state:h,zip:y,courseName:r,numCredits:n,deptID:d,Instructor:f}),e.clearFields(2)},children:"Sign in"})})})]})]});a.a.render(T,document.getElementById("root"))},e.hideFields=function(){var t=e.showFields;a.a.render(Object(m.jsx)("button",{onClick:function(){return t()},children:"Show"}),document.getElementById("root"))};var o=e.populateFields.bind(Object(S.a)(e));e.populateFields=o;var r=e.showFields.bind(Object(S.a)(e));return e.showFields=r,r=e.hideFields.bind(Object(S.a)(e)),e.hideFields=r,e}return Object(c.a)(s,[{key:"makeForm",value:function(){}},{key:"render",value:function(){var e=this,t=this.state.tempData,s=t.userID,o=t.courseID,r=t.crn,n=t.courseName,a=t.numCredits,i=t.deptID,d=t.userType,c=t.firstName,l=t.lastName,u=t.phoneNum,p=t.DOB,I=t.street,O=t.studentID,S=t.email,D=t.city,N=t.state,h=t.zip,y=t.Instructor;return Object(m.jsxs)("div",{className:"container-fluid",id:"loginFormContainer","max-height":"80%",children:[Object(m.jsx)("button",{onClick:this.hideFields,children:"Hide"}),Object(m.jsxs)("form",{id:"form1",children:[Object(m.jsxs)("div",{className:"row",children:[Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"userID",type:"text",className:"form-control",placeholder:"userID",onChange:function(e){s=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"studentID",type:"text",className:"form-control",placeholder:"studentID",onChange:function(e){O=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"email",type:"text",className:"form-control",placeholder:"email",onChange:function(e){S=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"courseID",type:"text",className:"form-control",placeholder:"userType",onChange:function(e){o=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"firstName",type:"text",className:"form-control",placeholder:"firstName",onChange:function(e){c=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"lastName",type:"text",className:"form-control",placeholder:"lastName",onChange:function(e){l=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"phoneNum",type:"text",className:"form-control",placeholder:"phoneNum",onChange:function(e){u=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"password",type:"text",className:"form-control",placeholder:"street",onChange:function(e){p=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"street",type:"text",className:"form-control",placeholder:"street",onChange:function(e){I=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"city",type:"text",className:"form-control",placeholder:"city",onChange:function(e){D=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"state",type:"text",className:"form-control",placeholder:"state",onChange:function(e){N=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"zip",type:"text",className:"form-control",placeholder:"zip",onChange:function(e){h=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"courseID",type:"text",className:"form-control",placeholder:"courseID",onChange:function(e){o=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"courseName",type:"text",className:"form-control",placeholder:"courseName",onChange:function(e){n=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"numCredits",type:"text",className:"form-control",placeholder:"numCredits",onChange:function(e){a=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"crn",type:"text",className:"form-control",placeholder:"crn",onChange:function(e){r=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"deptID",type:"text",className:"form-control",placeholder:"deptID",onChange:function(e){i=e.target.value}})}),Object(m.jsx)("div",{className:"col-3",children:Object(m.jsx)("input",{id:"Instructor",type:"text",className:"form-control",placeholder:"Instructor",onChange:function(e){y=e.target.value}})})]}),Object(m.jsx)("div",{className:"row",children:Object(m.jsxs)("div",{className:"form-group col-3",children:[Object(m.jsx)("label",{for:"inputState"}),Object(m.jsxs)("select",{id:"inputState",onChange:function(e){d=e.target.value},className:"form-control",defaultValue:"Choose User Type",children:[Object(m.jsx)("option",{children:"Choose User Type"}),Object(m.jsx)("option",{value:"Student",children:"Student"}),Object(m.jsx)("option",{value:"Admin",children:"Admin"}),Object(m.jsx)("option",{value:"Faculty",children:"Faculty"}),Object(m.jsx)("option",{value:"ResearchStaff",children:"Research Staff"})]})]})}),Object(m.jsx)("div",{className:"row",children:Object(m.jsx)("div",{className:"col-12",children:Object(m.jsx)("button",{type:"submit",className:"btn btn-primary mt-3",onClick:function(t){t.preventDefault(),e.clearFields(1),e.props.passQueryParams({userID:s,crn:r,courseID:o,userType:d,firstName:c,lastName:l,phoneNum:u,DOB:p,street:I,studentID:O,email:S,city:D,state:N,zip:h,courseName:n,numCredits:a,deptID:i,Instructor:y})},children:"Submit"})})})]})]})}}]),s}(o.Component)),b=(s(74),function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;Object(d.a)(this,s),(o=t.call(this,e)).makeSomeTables=function(e,t){o.setState({data:e});var s=[],r=[],n=0,i=e.map((function(e,t){var o=Object.keys(e),a=[];return o.map((function(e){s.includes(e)||s.push(e)})),s.map((function(t,o){a.push(Object(m.jsx)("td",{children:e[t]})),n<s.length&&(r.push(Object(m.jsx)("th",{id:"dbHead",children:s[o]})),n++)})),Object(m.jsx)("tr",{id:"dbRow",children:a})})),d=Object(m.jsxs)("table",{className:"table",children:[Object(m.jsx)("thead",{class:"thead-dark",children:Object(m.jsx)("tr",{children:r})}),Object(m.jsx)("tbody",{children:i})]});a.a.render(Object(m.jsx)("div",{className:"main",children:d}),document.getElementById(t)),console.log(s)},o.generateAndDisplayTableFromObject=function(e,t){o.makeSomeTables(e,t),console.log("Displaying some data at id ",t)},o.doHandleGetTranscript=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);e.studentID=parseInt(e.studentID),h.a.post("http://localhost:3305/Admin/transcript",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.generateAndDisplayTableFromObject(e.data,"test3")})).catch((function(e){e&&400==e.response.status&&console.log("Bad request. Incorrect studentID maybe?")}))},o.doHandleCourseSearch=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["crn, courseID, courseName, Instructor"]);h.a.post("http://localhost:3305/Admin/courseSearch",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleCreateCourse=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["courseID","courseName","numCredits","deptID"]);e.deptID=e.deptID.replace("'"),h.a.post("http://localhost:3305/Admin/createCourse",{newObj:e}).then((function(t){console.log(t.status),200==t.status&&o.displayNewMsgOnScreen("Successfully created courseID: "+e.courseID)})).catch(function(e){this.displayNewMsgOnScreen("Bad request. Check fields."),e&&400==e.response.status&&console.log("Bad request")}.bind(Object(S.a)(o)))},o.displayTextMessageOnScreen=function(e){o.clear(),console.log("Displaying");var t=Object(m.jsx)("h2",{children:e});a.a.render(Object(m.jsx)("div",{className:"d-flex justify-content-center",children:t}),document.getElementById("test1"))},o.displayNewMsgOnScreen=function(e){o.clear(),console.log("Displaying");var t=Object(m.jsx)("h2",{children:e});a.a.render(Object(m.jsx)("div",{className:"d-flex justify-content-center",children:t}),document.getElementById("output"))},o.doHandleCreateUser=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["userID","userType","firstName","lastName","phoneNumber","DOB","street","city","state","zip"]);h.a.post("http://localhost:3305/Admin/createUser",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleDeleteCourse=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["courseID"]);h.a.post("http://localhost:3305/Admin/deleteCourse",{newObj:e}).then((function(t){console.log(t.status),200==t.status&&o.displayTextMessageOnScreen("Successfully deleted courseID: "+e.courseID)})).catch(function(e){this.displayTextMessageOnScreen("Bad request. Check userID field!"),e&&400==e.response.status&&console.log("Bad request. Incorrect userID maybe?")}.bind(Object(S.a)(o)))},o.doHandleGetDegreeAudit=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Admin/degreeAuditPt1",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")})),h.a.post("http://localhost:3305/Admin/degreeAuditPt2",{newObj:e}).then((function(e){console.log("RESPONSE PT 2",e),e.data,o.generateAndDisplayTableFromObject(e.data,"test4")}))},o.clear=function(){a.a.render(Object(m.jsx)("div",{}),document.getElementById("test3")),a.a.render(Object(m.jsx)("div",{}),document.getElementById("test4"))},o.doHandleDropCourse=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["studentID","crn"]);h.a.post("http://localhost:3305/Admin/dropCourse",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.generateAndDisplayTableFromObject(e.data,"test3")})).catch((function(e){e&&400==e.response.status&&console.log("Bad request. Incorrect userID maybe?")}))},o.doHandleGetFacultyCourseList=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["facultyID"]);h.a.post("http://localhost:3305/Admin/facultyCourseList",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e,"test3")}))},o.doHandleModifyCourse=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["courseID","courseName","numCredits","deptID"]);h.a.post("http://localhost:3305/Admin/modifyCourse",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e,"test3")}))},o.doHandleModifyUser=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["firstName","lastName","phoneNumber","DOB","street","city","state","zip","userID"]);console.log(e),h.a.post("http://localhost:3305/Admin/modifyUser",{newObj:e}).then((function(t){console.log(t.status),200==t.status&&(console.log(t),o.displayTextMessageOnScreen("Modified User "+e.userID+"!"))})).catch(function(e){}.bind(Object(S.a)(o)))},o.doHandleRegisterForCourse=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["studentID","crn"]);h.a.post("http://localhost:3305/Admin/registerForCourse",{newObj:e}).then((function(t){console.log(t),a.a.render(Object(m.jsx)("div",{className:"main",children:Object(m.jsxs)("h2",{children:["Registered ",e.studentID," for course ",e.crn,"!"]})}),document.getElementById("test3"))}))},o.componentDidMount=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log(e),h.a.post("http://localhost:3305/Faculty/facultyLoginInfo",{newObj:e}).then((function(e){console.log(e);var t=e.data[0],s={userID:t.userID,firstName:t.firstName,lastName:t.lastName};console.log(s),o.displayLoginHeader(s),a.a.render(Object(m.jsx)("div",{}),document.getElementById("root"))}))},o.displayLoginHeader=function(e){var t=e.userID,s=(e.userType,e.firstName),r=e.lastName;e.email,e.password;o.displayTextMessageOnScreen(Object(m.jsxs)("div",{children:[Object(m.jsx)("h3",{className:"text-center",children:"Welcome to New Eastbury "}),Object(m.jsxs)("h1",{className:"text-center",style:{textDecoration:"underline"},children:[" ",s," ",r,"!",Object(m.jsxs)("h3",{children:["(UserID: ",t,")"]})]})]}),"test1")},o.doHandleGetStudentHistory=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Admin/studentHistory",{newObj:e}).then((function(e){console.log(e),o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleGetAdminLoginInfo=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,h.a.post("http://localhost:3305/Admin/adminLoginInfo",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleLogin=function(){o.clear();var e=o.state.reqBodyObj,t={};["userName","password","userType"].map((function(s){t[s]=s in e?e[s]:""})),h.a.post("http://localhost:3305/Admin/courseSearch",{newObj:t}).then((function(e){}))},o.doHandleUpdatePassword=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["password","userID"]);h.a.post("http://localhost:3305/Admin/updatePassword",{newObj:e}).then((function(t){o.displayTextMessageOnScreen("Updated password for user "+e.userID+"!")}))},o.doHandleViewAllUsers=function(){o.clear(),o.curQuery=f.a.viewAllUsers,h.a.post("http://localhost:3305/Admin/viewAllUsers",{}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleViewStudentHistory=function(){o.clear();var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Admin/viewCourseHistory",{newObj:e}).then((function(e){}))},o.doHandleViewFacultyAdvisors=function(){o.clear(),o.curQuery=f.a.viewFacultyAdvisors,h.a.post("http://localhost:3305/Admin/viewFacultyAdvisors",{}).then((function(e){}))},o.doHandleViewStudentAdvisees=function(){o.clear(),h.a.post("http://localhost:3305/Admin/viewStudentAdvisees",{}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleViewHolds=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Admin/viewHolds",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleViewRegistration=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Admin/viewRegistration",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleViewStudentSchedule=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Admin/viewStudentSchedule",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.generateObjectWithNeededPropertiesOnly=function(e){var t={},s=o.state.reqBodyObj;return e.map((function(e){t[e]=e in s?s[e]:""})),t},o.doHandleTestLogin=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);h.a.post("http://localhost:3305/Admin/testLogin",{newObj:e}).then((function(e){}))},o.getQueryParams=function(e){var t=e;console.log("Trying to update query: "+e),o.setState({tempData:t}),console.log(o.state.tempData),console.log("Updated properties")},o.updateParams=function(e,t){console.log(e);var s=o.state.tempData;s[e]=t,o.setState({tempData:s}),console.log("QUERY HANDLER: changed state of relevant key: ",e),console.log("Temp Data: ",o.state.tempData);var r=o.state.reqBodyObj;r[e]=t,o.setState({reqBodyObj:r});console.log("Needed",[])},o.makeForms=function(){return Object(m.jsx)(T,{passQueryParams:o.getQueryParams})},o.state={res:[],msg:"",reqBodyObj:{},data:[],password:"",tempData:{userID:"",Instructor:"",crn:"",courseID:"",courseName:"",numCredits:"",deptID:"",userType:"",firstName:"",lastName:"",phoneNum:"",DOB:"",street:"",studentID:"",email:"",city:"",state:"",zip:""}},o.curQuery="";var r=o.makeSomeTables.bind(Object(S.a)(o));return o.makeSomeTables=r,r=o.displayTextMessageOnScreen.bind(Object(S.a)(o)),o.displayTextMessageOnScreen=r,r=o.displayNewMsgOnScreen.bind(Object(S.a)(o)),o.displayNewMsgOnScreen=r,o}return Object(c.a)(s,[{key:"render",value:function(){return Object(m.jsx)("div",{children:Object(m.jsx)(O,{formData:this.state.tempData,adminLoginInfo:this.doHandleGetAdminLoginInfo,facultyCourseList:this.doHandleGetFacultyCourseList,courseSearch:this.doHandleCourseSearch,createCourse:this.doHandleCreateCourse,createUser:this.doHandleCreateUser,deleteCourse:this.doHandleDeleteCourse,degreeAudit:this.doHandleGetDegreeAudit,getTranscript:this.doHandleGetTranscript,dropStudentCourse:this.doHandleDropCourse,testLogin:this.doHandleTestLogin,modifyCourse:this.doHandleModifyCourse,modifyUser:this.doHandleModifyUser,registerStudentForCourse:this.doHandleRegisterForCourse,studentHistory:this.doHandleGetStudentHistory,viewStudentTranscript:this.doHandleGetTranscript,updatePassword:this.doHandleUpdatePassword,viewAllUsers:this.doHandleViewAllUsers,viewCourseHistory:this.doHandleViewStudentHistory,viewStudentHistory:this,viewFacultyAdvisors:this.doHandleViewFacultyAdvisors,viewStudentHolds:this.doHandleViewHolds,viewRegistration:this.doHandleViewRegistration,viewStudentAdvisees:this.doHandleViewStudentAdvisees,viewStudentSchedule:this.doHandleViewStudentSchedule,userType:"Admin",updateParams:this.updateParams})})}}]),s}(o.Component)),A=(o.Component,s(276),s(143)),j=s.n(A),C=(o.Component,s(84),s(141),function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;Object(d.a)(this,s),(o=t.call(this,e)).makeSomeTables=function(e,t){o.setState({data:e});var s=[],r=[],n=0,i=e.map((function(e,t){var o=Object.keys(e),a=[];return o.map((function(e){s.includes(e)||s.push(e)})),s.map((function(t,o){a.push(Object(m.jsx)("td",{children:e[t]})),n<s.length&&(r.push(Object(m.jsx)("th",{id:"dbHead",children:s[o]})),n++)})),Object(m.jsx)("tr",{id:"dbRow",children:a})})),d=Object(m.jsxs)("table",{className:"table",children:[Object(m.jsx)("thead",{class:"thead-dark",children:Object(m.jsx)("tr",{children:r})}),Object(m.jsx)("tbody",{children:i})]});a.a.render(Object(m.jsx)("div",{className:"main",children:d}),document.getElementById(t)),console.log(s)},o.displayTextMessageOnScreen=function(e,t){console.log("Displaying");var s=e;a.a.render(Object(m.jsx)("div",{className:"main",children:s}),document.getElementById(t))},o.generateAndDisplayTableFromObject=function(e,t){o.makeSomeTables(e,t),console.log("Displaying some data at id ",t)},o.doHandleCourseSearch=function(){var e=o.generateObjectWithNeededPropertiesOnly(["crn","courseID","courseName","Instructor"]);h.a.post("http://localhost:3305/Admin/courseSearch",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleGetDegreeAudit=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Faculty/degreeAuditPt1",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")})),h.a.post("http://localhost:3305/Faculty/degreeAuditPt2",{newObj:e}).then((function(e){console.log("RESPONSE PT 2",e),e.data,o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleGetFacultyAssignedCourseList=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Faculty/assignedCourseList",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.generateAndDisplayTableFromObject(e.data,"test2")})).catch(function(e){this.displayTextMessageOnScreen(Object(m.jsx)("h2",{children:"Bad request. Something went wrong."}),"test2"),e&&400==e.response.status&&console.log("Something went wrong.")}.bind(Object(S.a)(o)))},o.componentDidMount=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log(e),h.a.post("http://localhost:3305/Faculty/facultyLoginInfo",{newObj:e}).then((function(e){console.log(e);var t=e.data[0],s={userID:t.userID,firstName:t.firstName,lastName:t.lastName};console.log(s),o.displayLoginHeader(s)}))},o.displayLoginHeader=function(e){var t=e.userID,s=(e.userType,e.firstName),r=e.lastName;e.email,e.password;o.displayTextMessageOnScreen(Object(m.jsxs)("div",{children:[Object(m.jsx)("h3",{className:"text-center",children:"Welcome to New Eastbury "}),Object(m.jsxs)("h1",{className:"text-center",style:{textDecoration:"underline"},children:[" ",s," ",r,"!",Object(m.jsxs)("h3",{children:["(UserID: ",t,")"]})]})]}),"test1")},o.doHandleGetFacultyLoginInfo=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,h.a.post("http://localhost:3305/Faculty/facultyLoginInfo",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleRecordAttendance=function(){o.curQuery=j.a.recordAttendance;var e=o.generateObjectWithNeededPropertiesOnly(["studentID","crn","isPresent","date"]);console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Faculty/recordAttendance",{newObj:e}).then((function(e){console.log("Response"),console.log(e)}))},o.doHandleGetStudentHistory=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Faculty/studentHistory",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleGetTranscript=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Faculty/transcript",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.generateAndDisplayTableFromObject(e.data,"test2")})).catch((function(e){e&&400==e.response.status&&console.log("Bad request. Incorrect studentID maybe?")}))},o.doHandleUpdatePassword=function(){var e=o.generateObjectWithNeededPropertiesOnly(["password","facultyID"]);e.facultyID=o.props.userCredentials.userID,h.a.post("http://localhost:3305/Faculty/updatePassword",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.displayTextMessageOnScreen(Object(m.jsx)("h2",{className:"text-center",children:"Successfully updated password!"}),"test2")})).catch(function(e){e&&400==e.response.status&&this.displayTextMessageOnScreen(Object(m.jsx)("h2",{className:"text-center",children:"Something went wrong. Check the console?"}),"test2")}.bind(Object(S.a)(o)))},o.doHandleViewHolds=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Faculty/viewHolds",{newObj:e}).then((function(e){console.log(e),o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleViewRegistration=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Faculty/viewRegistration",{newObj:e}).then((function(e){console.log(e),o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleViewStudentAdvisees=function(){var e={facultyID:o.props.userCredentials.userID};h.a.post("http://localhost:3305/Faculty/viewStudentAdvisees",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.generateAndDisplayTableFromObject(e.data,"test2")})).catch((function(e){e?400==e.response.status&&console.log("Bad request. Incorrect userID maybe?"):console.log("Some other thing went wrong.")}))},o.doHandleViewStudentSchedule=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);h.a.post("http://localhost:3305/Faculty/viewStudentSchedule",{newObj:e}).then((function(e){console.log(e.status),200==e.status&&o.generateAndDisplayTableFromObject(e.data,"test2")})).catch((function(e){e?400==e.response.status&&console.log("Bad request. Incorrect studentID maybe?"):console.log("Some other thing went wrong.")}))},o.generateObjectWithNeededPropertiesOnly=function(e){var t={},s=o.state.reqBodyObj;return e.map((function(e){t[e]=e in s?s[e]:""})),t},o.doHandleTestLogin=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);h.a.post("http://localhost:3305/Admin/testLogin",{newObj:e}).then((function(e){console.log(e)}))},o.getQueryParams=function(e){var t=e;console.log("Trying to update query: "+e),o.setState({tempData:t}),console.log(o.state.tempData),console.log("Updated properties")},o.updateParams=function(e,t){console.log(e);var s=o.state.tempData;s[e]=t,o.setState({tempData:s}),console.log("QUERY HANDLER: changed state of relevant key: ",e),console.log("Temp Data: ",o.state.tempData);var r=o.state.reqBodyObj;r[e]=t,o.setState({reqBodyObj:r})},o.makeForms=function(){return Object(m.jsx)(T,{passQueryParams:o.getQueryParams})},o.state={reqBodyObj:{},tempData:{userID:"",Instructor:"",crn:"",courseID:"",courseName:"",numCredits:"",deptID:"",userType:"",firstName:"",lastName:"",phoneNum:"",DOB:"",street:"",studentID:"",email:"",city:"",state:"",zip:"",password:""}},o.curQuery="";var r=o.makeSomeTables.bind(Object(S.a)(o));return o.makeSomeTables=r,r=o.displayTextMessageOnScreen.bind(Object(S.a)(o)),o.displayTextMessageOnScreen=r,o}return Object(c.a)(s,[{key:"render",value:function(){return Object(m.jsx)("div",{className:"Navigation",children:Object(m.jsx)(O,{className:"Navigation",assignedCourseList:this.doHandleGetFacultyAssignedCourseList,courseSearch:this.doHandleCourseSearch,degreeAudit:this.doHandleGetDegreeAudit,facultyLoginInfo:this.doHandleGetFacultyLoginInfo,recordAttendance:this.doHandleRecordAttendance,studentHistory:this.doHandleGetStudentHistory,transcript:this.doHandleGetTranscript,updatePassword:this.doHandleUpdatePassword,viewHolds:this.doHandleViewHolds,viewRegistration:this.doHandleViewRegistration,viewStudentAdvisees:this.doHandleViewStudentAdvisees,viewStudentSchedule:this.doHandleViewStudentSchedule,userType:"Faculty",updateParams:this.updateParams})})}}]),s}(o.Component)),g=function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(d.a)(this,s),(o=t.call(this,e)).state={display:Object(m.jsx)(O,{userType:o.props.userType})},o}return Object(c.a)(s,[{key:"render",value:function(){return Object(m.jsx)("div",{})}}]),s}(o.Component),E=s(18),v=s.n(E),R=(o.Component,function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(d.a)(this,s),(o=t.call(this,e)).makeSomeTables=function(e,t){o.setState({data:e});var s=[],r=[],n=0,i=e.map((function(e,t){var o=Object.keys(e),a=[];return o.map((function(e){s.includes(e)||s.push(e)})),s.map((function(t,o){a.push(Object(m.jsx)("td",{children:e[t]})),n<s.length&&(r.push(Object(m.jsx)("th",{id:"dbHead",children:s[o]})),n++)})),Object(m.jsx)("tr",{id:"dbRow",children:a})})),d=Object(m.jsxs)("table",{className:"table",children:[Object(m.jsx)("thead",{class:"thead-dark",children:Object(m.jsx)("tr",{children:r})}),Object(m.jsx)("tbody",{children:i})]});a.a.render(Object(m.jsx)("div",{className:"main",children:d}),document.getElementById(t)),console.log(s)},o.displayTextMessageOnScreen=function(e){console.log("Displaying");var t=Object(m.jsx)("h2",{children:e});a.a.render(Object(m.jsx)("div",{className:"main",children:t}),document.getElementById("test2"))},o.generateAndDisplayTableFromObject=function(e,t){o.makeSomeTables(e,t),console.log("Displaying some data at id ",t)},o.doHandleCourseSearch=function(){var e=o.generateObjectWithNeededPropertiesOnly(["courseID"]);h.a.post("http://localhost:3305/Student/courseSearch",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleGetDegreeAudit=function(){var e=o.generateObjectWithNeededPropertiesOnly(["studentID"]);e.studentID=o.props.userCredentials.userID;h.a.post("http://localhost:3305/Student/degreeAuditPt1",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")})),h.a.post("http://localhost:3305/Student/degreeAuditPt2",{newObj:e}).then((function(e){console.log("RESPONSE PT 2",e),e.data,o.generateAndDisplayTableFromObject(e.data,"test3")}))},o.doHandleDropCourse=function(){o.curQuery=v.a.dropCourse;var e=o.generateObjectWithNeededPropertiesOnly(["studentID","crn"]);e.studentID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/dropCourse",{newObj:e}).then((function(e){console.log("Response"),console.log(e)}))},o.doHandleRegisterForCourse=function(){o.curQuery=v.a.registerForCourse;var e=o.generateObjectWithNeededPropertiesOnly(["studentID","crn"]);e.studentID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/registerForCourse",{newObj:e}).then((function(e){console.log("Response"),console.log(e)}))},o.doHandleGetStudentHistory=function(){o.curQuery=v.a.studentHistory;var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/studentHistory",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleGetTranscript=function(){o.curQuery=v.a.transcript;var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/transcript",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleUpdatePassword=function(){o.curQuery=v.a.updatePassword;var e=o.generateObjectWithNeededPropertiesOnly(["password","studentID"]);e.studentID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/updatePassword",{newObj:e}).then((function(e){console.log("Response"),console.log(e)}))},o.doHandleViewAdvisor=function(){o.curQuery=v.a.viewAdvisor;var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/viewAdvisor",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleViewHolds=function(){o.curQuery=v.a.viewHolds;var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/viewHolds",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleViewRegistration=function(){o.curQuery=v.a.viewRegistration;var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/viewRegistration",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.doHandleGetViewStudentLoginInfo=function(){o.curQuery=v.a.viewStudentLoginInfo;var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);e.userID=o.props.userCredentials.userID,console.log("Submitted request body: "+e),h.a.post("http://localhost:3305/Student/studentLoginInfo",{newObj:e}).then((function(e){o.generateAndDisplayTableFromObject(e.data,"test2")}))},o.getQueryParams=function(e){var t=e;o.setState({tempData:t}),console.log(o.state.tempData),console.log("Updated properties")},o.makeForms=function(){var e=Object(m.jsx)(T,{passQueryParams:o.getQueryParams});a.a.render(e,document.getElementById("root")),o.setState(),console.log(),console.log("Generating forms")},o.generateObjectWithNeededPropertiesOnly=function(e){var t={},s=o.state.reqBodyObj;return e.map((function(e){t[e]=e in s?s[e]:""})),t},o.doHandleTestLogin=function(){var e=o.generateObjectWithNeededPropertiesOnly(["userID"]);h.a.post("http://localhost:3305/Admin/testLogin",{newObj:e}).then((function(e){console.log(e)}))},o.getQueryParams=function(e){var t=e;console.log("Trying to update query: "+e),o.setState({tempData:t}),console.log(o.state.tempData),console.log("Updated properties")},o.updateParams=function(e,t){console.log(e);var s=o.state.tempData;s[e]=t,o.setState({tempData:s}),console.log("QUERY HANDLER: changed state of relevant key: ",e),console.log("Temp Data: ",o.state.tempData);var r=o.state.reqBodyObj;r[e]=t,o.setState({reqBodyObj:r});console.log("Needed",[])},o.makeForms=function(){return Object(m.jsx)(T,{passQueryParams:o.getQueryParams})},o.state={reqBodyObj:{},tempData:{userID:"",Instructor:"",crn:"",courseID:"",courseName:"",numCredits:"",deptID:"",userType:"",firstName:"",lastName:"",phoneNum:"",DOB:"",street:"",studentID:"",email:"",city:"",state:"",zip:"",password:""}},o.curQuery="",o}return Object(c.a)(s,[{key:"render",value:function(){return Object(m.jsxs)("div",{children:[this.makeForms(),Object(m.jsx)(O,{courseSearch:this.doHandleCourseSearch,degreeAudit:this.doHandleGetDegreeAudit,dropCourse:this.doHandleDropCourse,registerForCourse:this.doHandleRegisterForCourse,studentHistory:this.doHandleGetStudentHistory,transcript:this.doHandleGetTranscript,updatePassword:this.doHandleUpdatePassword,viewAdvisor:this.doHandleViewAdvisor,viewHolds:this.doHandleViewHolds,viewRegistration:this.doHandleViewRegistration,studentLoginInfo:this.doHandleGetViewStudentLoginInfo,userType:"Student",updateParams:this.updateParams})]})}}]),s}(o.Component)),F=function(e){Object(l.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(d.a)(this,s),(o=t.call(this,e)).handleLogin=function(e,t,s){var r="";h.a.post("http://localhost:3305/Main/login",{args:{username:e,password:t,userType:s},username:e,password:t,userType:s}).then((function(e){if(console.log(e.data.validated),e.data.validated){var s=e.data.userID,n=e.data.userType,d=e.data.userEmail,c={userID:s,password:t,userEmail:d,userType:e.data.userType};switch(console.log(e.data.userType),o.setState({userCredentials:c}),n){case"Admin":a.a.render(Object(m.jsx)(b,{userType:"Admin",tempData:o.state.tempData,userCredentials:o.state.userCredentials}),document.getElementById("NavBar"));break;case"Faculty":a.a.render(Object(m.jsx)(C,Object(i.a)({userCredentials:o.state.userCredentials,userType:"Faculty",tempData:o.state.tempData},"userCredentials",o.state.userCredentials)),document.getElementById("NavBar")),console.log("Faculty");break;case"Research Staff":a.a.render(Object(m.jsx)(g,{userType:"ResearchStaff",tempData:o.state.tempData,userCredentials:o.state.userCredentials}),document.getElementById("NavBar"));case"Student":a.a.render(Object(m.jsx)(R,{userType:"Student",tempData:o.state.tempData,userCredentials:o.state.userCredentials}),document.getElementById("NavBar")),console.log("Match");break;default:console.log("Nothing of import.")}r="Success! Logged in as "+o.state.userCredentials.userID,o.setState({displayMsg:r})}else r="Incorrect user/pass combo! Please try again.",o.setState({displayMsg:r})}))},o.state={userCredentials:{userID:"",password:"",userEmail:""},tempData:{userID:"",courseID:"",userType:"",firstName:"",lastName:"",phoneNum:"",DOB:"",street:"",city:"",state:"",zip:""},username:" ",password:"",studentID:0,displayMsg:"Login"},o.displays=[,],o}return Object(c.a)(s,[{key:"doHandleGenerateForms",value:function(e){a.a.render(Object(m.jsx)("div",{children:e}),document.getElementById("NavBar"))}},{key:"render",value:function(){return Object(m.jsxs)(r.a.Fragment,{children:[Object(m.jsxs)("div",{className:"row",children:[Object(m.jsx)("div",{className:"col-2"}),Object(m.jsx)("h1",{children:this.state.displayMsg}),Object(m.jsx)("div",{className:"col-8",children:Object(m.jsx)(D,{onLoginSubmit:this.handleLogin})})]}),Object(m.jsxs)("div",{className:"row",children:[Object(m.jsx)(p,{fields:["studentID"]}),Object(m.jsx)("div",{id:"widget",className:"col-4"})]}),Object(m.jsx)("div",{})]})}}]),s}(o.Component);o.Component;a.a.render(Object(m.jsx)("div",{children:Object(m.jsx)("div",{className:"main",children:Object(m.jsx)(F,{})})}),document.getElementById("root"))},38:function(e,t,s){},48:function(e,t,s){},49:function(e,t,s){},74:function(e,t,s){},75:function(e,t,s){var o=s(275),r={adminLoginInfo:o.adminLoginInfo,courseSearch:o.courseSearch,createCourse:o.createCourse,createUser:o.createUser,deleteCourse:o.deleteCourse,degreeAudit:o.getDegreeAuditCoursesTakenP1,degreeAudit2:o.getDegreeAuditCoursesTakenP2,dropCourse:o.dropCourse,facultyCoursesTeaching:o.facultyCoursesTeaching,modifyCourse:o.modifyCourse,modifyUser:o.modifyUser,registerForCourse:o.registerForCourse,studentLoginInfo:o.studentLoginInfo,studentHistory:o.studentHistory,transcript:o.transcript,updatePassword:o.updatePassword,viewAllUsers:o.viewAllUsers,viewCourseHistory:o.viewCourseHistory,viewFacultyAdvisors:o.viewFacultyAdvisors,viewHolds:o.viewHolds,viewRegistration:o.viewRegistration,viewStudentAdvisees:o.viewStudentAdvisees,viewStudentSchedule:o.viewStudentSchedule};e.exports=r}},[[278,1,2]]]);
//# sourceMappingURL=main.3b436ed4.chunk.js.map